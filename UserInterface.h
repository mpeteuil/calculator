// generated by Fast Light User Interface Designer (fluid) version 1.0108

#ifndef USER_INTERFACE_H
#define USER_INTERFACE_H

#include "FL/Fl.H"
#include "FL/Fl_Window.H"
#include "FL/Fl_Double_Window.H"
#include "FL/Fl_Button.H"
#include "FL/Fl_Input.H"
#include "FL/Fl_Output.H"
#include "InputBox.h"
#include "OutputBox.h"
#include "CalculatorButton.h"
#include "MediatorDirector.h"
#include "Director.h"
#include "EvaluateVisitor.h"
#include "SimplifyVisitor.h"
#include "PrintVisitor.h"

class CalculatorButton;
class InputBox;
//class OutputBox;

class UserInterface : public Fl_Window, public MediatorDirector {
public:
  	UserInterface(int X, int Y, int W, int H, const char *L = 0);
  	void WidgetChanged(Widget* );
  	virtual ~UserInterface();
  	bool NotEvaluatable(string s);
	bool GetNotSimplifiable();
  
 	Fl_Double_Window *ui_window;
 	CalculatorButton *evaluate_button;
 	InputBox *in_textbox;
 	Fl_Output *out_textbox;
  	CalculatorButton *simplify_button;
  	CalculatorButton *reset_button;
  	CalculatorButton *one_button;
  	CalculatorButton *two_button;
  	CalculatorButton *three_button;
  	CalculatorButton *add_button;
  	CalculatorButton *four_button;
  	CalculatorButton *five_button;
  	CalculatorButton *six_button;
  	CalculatorButton *subtract_button;
  	CalculatorButton *seven_button;
  	CalculatorButton *eight_button;
  	CalculatorButton *nine_button;
  	CalculatorButton *multiply_button;
  	CalculatorButton *zero_button;
  	CalculatorButton *divide_button;
  	CalculatorButton *true_button;
  	CalculatorButton *false_button;
  	CalculatorButton *and_button;
  	CalculatorButton *or_button;
  	CalculatorButton *colon_button;
  	CalculatorButton *less_button;
  	CalculatorButton *equal_button;
  	CalculatorButton *greater_button;
  	CalculatorButton *leftpar_button;
  	CalculatorButton *rightpar_button;
  	CalculatorButton *a_button;
  	CalculatorButton *b_button;
  	CalculatorButton *c_button;
  	CalculatorButton *e_button;
  	CalculatorButton *f_button;
  	CalculatorButton *d_button;
  	CalculatorButton *g_button;
  	CalculatorButton *h_button;
  	CalculatorButton *i_button;
  	CalculatorButton *j_button;
  	CalculatorButton *k_button;
  	CalculatorButton *l_button;
  	CalculatorButton *m_button;
  	CalculatorButton *n_button;
  	CalculatorButton *o_button;
  	CalculatorButton *p_button;
  	CalculatorButton *q_button;
  	CalculatorButton *r_button;
  	CalculatorButton *s_button;
  	CalculatorButton *t_button;
  	CalculatorButton *u_button;
  	CalculatorButton *v_button;
  	CalculatorButton *w_button;
  	CalculatorButton *x_button;
  	CalculatorButton *y_button;
  	CalculatorButton *z_button;
  	CalculatorButton *comma_button;
  	CalculatorButton *tilde_button;
private:
	bool not_simplifiable;
	Director *DirectorOfExpression;
};
#endif
